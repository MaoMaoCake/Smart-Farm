
#include <IRremoteESP8266.h>
#include <IRsend.h>
#include <WiFi.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>

DynamicJsonDocument doc(1024);

const char* ssid = "dlink-7F78";
const char* password = "qwertyuiop";
const char* mqtt_server = "192.168.0.10";
#define mqtt_port 1883
#define MQTT_USER "admin"
#define MQTT_PASSWORD "password"
#define MQTT_SERIAL_PUBLISH_CH "python/mqtt"
#define MQTT_SERIAL_RECEIVER_CH "6"

const int esp_status_pin = 2;

boolean activate;
int input_temperature = 20;
bool turn_on_status = false;
bool used_by_user = false;

WiFiClient wifiClient;

PubSubClient client(wifiClient);

IRsend mySender(4);
#define RAW_DATA_LEN 212

const uint16_t PROGMEM rawDataON[RAW_DATA_LEN] = {
  3782, 1918, 442, 498, 474, 1414, 458, 462,
  446, 1458, 422, 498, 446, 1458, 422, 494,
  442, 1462, 422, 502, 442, 1458, 454, 486,
  470, 1414, 434, 1450, 422, 498, 474, 1426,
  418, 506, 434, 1466, 418, 1462, 446, 1438,
  438, 1442, 442, 502, 414, 506, 438, 1462,
  418, 1466, 418, 518, 470, 450, 478, 462,
  446, 498, 442, 1462, 446, 490, 470, 470,
  474, 466, 446, 494, 450, 1438, 458, 462,
  470, 1430, 442, 498, 446, 498, 442, 1442,
  414, 1466, 418, 1462, 418, 502, 442, 502,
  442, 498, 442, 1442, 442, 498, 442, 498,
  470, 490, 442, 498, 446, 1418, 454, 486,
  450, 506, 474, 1394, 454, 1426, 470, 1430,
  418, 506, 434, 506, 438, 506, 434, 506,
  438, 502, 438, 518, 442, 498, 442, 498,
  442, 502, 442, 498, 442, 498, 442, 502,
  438, 1442, 442, 498, 442, 502, 414, 526,
  414, 526, 414, 530, 414, 526, 410, 530,
  414, 526, 414, 530, 410, 530, 410, 534,
  410, 1470, 410, 530, 410, 534, 406, 534,
  422, 518, 410, 530, 410, 530, 410, 534,
  410, 530, 410, 534, 410, 530, 406, 1474,
  410, 530, 410, 1498, 386, 1498, 386, 1486,
  410, 1490, 382, 1490, 386, 546, 410, 534,
  410, 530, 410, 530, 410, 534, 410, 1474,
  410, 534, 410, 1000
};

const uint16_t PROGMEM rawDataOFF[RAW_DATA_LEN] = {
  3766, 1934, 442, 498, 446, 1438, 442, 470,
  470, 1442, 430, 490, 442, 1458, 446, 498,
  446, 1434, 446, 478, 462, 1442, 414, 506,
  466, 1438, 414, 1470, 414, 506, 466, 1438,
  422, 514, 446, 1438, 470, 1414, 442, 1438,
  446, 1438, 446, 478, 458, 486, 434, 1466,
  418, 1466, 418, 502, 438, 506, 438, 514,
  446, 498, 442, 1442, 430, 490, 442, 502,
  442, 518, 442, 478, 466, 1434, 446, 498,
  442, 1442, 438, 482, 462, 482, 458, 1422,
  462, 1422, 434, 1446, 438, 502, 442, 502,
  438, 502, 442, 498, 438, 1446, 438, 502,
  438, 502, 442, 502, 442, 1438, 442, 518,
  442, 498, 446, 1418, 454, 1430, 446, 1454,
  442, 502, 442, 498, 414, 506, 438, 506,
  434, 506, 438, 502, 442, 498, 442, 498,
  470, 490, 446, 494, 446, 494, 446, 482,
  450, 1430, 470, 490, 442, 498, 442, 502,
  442, 478, 462, 482, 462, 478, 438, 502,
  438, 502, 438, 502, 438, 506, 438, 502,
  438, 1446, 438, 502, 442, 518, 442, 482,
  458, 482, 458, 482, 462, 478, 462, 482,
  434, 506, 438, 506, 434, 506, 438, 1446,
  434, 506, 438, 1446, 438, 1446, 438, 1458,
  442, 1446, 426, 1458, 418, 518, 442, 502,
  438, 502, 442, 1442, 438, 1446, 418, 1466,
  414, 530, 410, 1000
};

const uint16_t PROGMEM rawDataECO[RAW_DATA_LEN] = {
  3798, 1902, 470, 454, 462, 1418, 462, 498,
  474, 1390, 482, 458, 474, 1430, 442, 498,
  470, 1394, 478, 462, 474, 1430, 414, 506,
  462, 1438, 442, 1422, 462, 502, 414, 1446,
  438, 502, 438, 1446, 438, 1442, 442, 1442,
  470, 1410, 490, 454, 462, 498, 442, 1418,
  466, 1438, 418, 502, 442, 498, 438, 506,
  438, 502, 438, 1446, 438, 502, 442, 502,
  438, 498, 442, 1442, 442, 1442, 470, 490,
  442, 498, 442, 478, 462, 482, 462, 1418,
  438, 1446, 458, 1422, 438, 502, 442, 498,
  442, 502, 438, 502, 442, 1442, 442, 1442,
  470, 490, 414, 506, 462, 1438, 442, 478,
  462, 482, 462, 1438, 418, 1446, 438, 1442,
  438, 502, 442, 502, 442, 498, 442, 498,
  474, 470, 490, 1390, 482, 462, 470, 470,
  462, 478, 462, 478, 462, 482, 458, 482,
  462, 1418, 434, 506, 438, 506, 434, 506,
  438, 502, 438, 506, 434, 502, 438, 506,
  438, 506, 438, 498, 446, 498, 442, 514,
  442, 1442, 442, 498, 442, 502, 414, 526,
  414, 530, 414, 526, 414, 526, 418, 526,
  414, 526, 418, 526, 414, 522, 418, 1466,
  414, 530, 410, 1474, 410, 1490, 410, 1474,
  410, 1474, 410, 1474, 406, 510, 410, 534,
  406, 534, 434, 1450, 410, 1474, 410, 530,
  410, 1478, 410, 1000
};

const uint16_t PROGMEM rawDataPC_ON[RAW_DATA_LEN] = {
  3798, 1902, 474, 470, 446, 1434, 446, 490,
  482, 1390, 482, 458, 474, 1426, 446, 498,
  442, 1438, 418, 502, 442, 1446, 438, 502,
  438, 1466, 418, 1442, 442, 502, 438, 1446,
  442, 498, 442, 1442, 446, 1434, 446, 1438,
  446, 1438, 470, 486, 446, 498, 446, 1434,
  446, 1442, 418, 534, 450, 458, 442, 502,
  442, 498, 442, 1438, 470, 486, 446, 498,
  446, 494, 474, 1410, 442, 1442, 418, 526,
  414, 502, 438, 506, 438, 506, 438, 1442,
  442, 1442, 438, 1442, 470, 486, 474, 470,
  446, 494, 446, 498, 470, 1414, 442, 1438,
  418, 506, 414, 526, 414, 1466, 414, 526,
  414, 526, 418, 1466, 414, 1470, 442, 1442,
  438, 502, 442, 498, 446, 514, 442, 498,
  446, 1434, 446, 498, 442, 498, 442, 502,
  414, 526, 418, 526, 414, 526, 414, 526,
  418, 1466, 414, 530, 414, 526, 414, 526,
  414, 530, 414, 526, 414, 530, 418, 518,
  434, 506, 414, 530, 410, 534, 406, 534,
  410, 1474, 406, 534, 410, 534, 410, 550,
  406, 534, 410, 510, 430, 514, 418, 522,
  406, 534, 410, 534, 406, 534, 434, 1470,
  386, 534, 430, 1474, 386, 1478, 406, 1478,
  406, 1474, 410, 1474, 410, 546, 410, 534,
  410, 530, 410, 534, 406, 1474, 386, 558,
  386, 554, 386, 1000
};

const uint16_t PROGMEM rawDataPC_OFF[RAW_DATA_LEN] = {
  3798, 1882, 466, 478, 462, 1418, 462, 482,
  466, 1434, 446, 478, 462, 1418, 466, 482,
  458, 1422, 462, 478, 438, 1446, 438, 502,
  438, 1446, 438, 1442, 442, 502, 438, 1446,
  470, 486, 470, 1398, 478, 1402, 446, 1438,
  446, 1438, 446, 494, 462, 482, 458, 1422,
  462, 1422, 438, 514, 442, 486, 442, 502,
  442, 498, 442, 1442, 442, 518, 438, 502,
  442, 498, 442, 1442, 442, 1442, 414, 510,
  434, 506, 434, 506, 438, 506, 434, 1450,
  434, 1466, 414, 1470, 414, 526, 434, 526,
  414, 530, 410, 1474, 410, 1470, 414, 1474,
  382, 534, 406, 534, 434, 1450, 410, 530,
  410, 534, 410, 1470, 410, 1474, 410, 1474,
  406, 534, 410, 534, 410, 546, 410, 534,
  410, 1474, 410, 530, 410, 530, 410, 534,
  410, 530, 410, 534, 386, 534, 406, 534,
  426, 1458, 410, 534, 406, 542, 410, 526,
  410, 546, 410, 534, 410, 530, 410, 534,
  410, 530, 406, 538, 406, 534, 386, 558,
  410, 1474, 382, 558, 386, 558, 386, 554,
  386, 550, 410, 534, 410, 530, 410, 530,
  410, 534, 410, 534, 406, 530, 386, 558,
  410, 530, 414, 1470, 410, 1474, 406, 1478,
  382, 1498, 386, 1498, 382, 558, 386, 558,
  382, 558, 386, 1498, 386, 1514, 362, 1526,
  358, 578, 362, 1000
};

//*****Temp*********


const uint16_t PROGMEM rawData16[RAW_DATA_LEN] = {
  3794, 1902, 474, 470, 470, 1410, 470, 474,
  470, 1394, 506, 434, 470, 1430, 470, 474,
  466, 1398, 502, 438, 470, 1430, 442, 482,
  486, 1414, 442, 1442, 442, 482, 486, 1398,
  494, 458, 470, 1414, 470, 1414, 470, 1410,
  470, 1414, 442, 482, 462, 478, 486, 1414,
  466, 1418, 442, 482, 462, 474, 466, 478,
  466, 474, 466, 1418, 466, 474, 466, 474,
  466, 478, 462, 1422, 462, 478, 466, 474,
  466, 474, 466, 474, 470, 490, 470, 1398,
  502, 1378, 474, 1426, 466, 474, 442, 482,
  462, 478, 462, 1442, 442, 1422, 462, 498,
  442, 494, 442, 502, 442, 1442, 442, 498,
  442, 502, 438, 1422, 462, 1426, 434, 1446,
  438, 506, 438, 498, 438, 506, 466, 486,
  470, 470, 470, 474, 466, 474, 466, 474,
  442, 502, 438, 502, 442, 502, 414, 506,
  438, 1446, 434, 506, 438, 502, 438, 502,
  442, 502, 438, 506, 438, 502, 462, 494,
  442, 498, 442, 502, 438, 502, 438, 506,
  438, 1442, 438, 506, 438, 506, 438, 1442,
  438, 502, 438, 506, 434, 506, 438, 522,
  434, 506, 434, 510, 430, 510, 430, 1466,
  406, 526, 406, 1474, 410, 1466, 434, 1450,
  430, 1450, 434, 1450, 406, 538, 406, 534,
  406, 534, 406, 1478, 406, 534, 406, 534,
  410, 1474, 406, 1000
};

const uint16_t PROGMEM rawData17[RAW_DATA_LEN] = {
  3794, 1902, 470, 470, 470, 1398, 502, 438,
  466, 1430, 466, 478, 442, 1422, 458, 482,
  462, 1422, 462, 474, 466, 1418, 462, 478,
  462, 1422, 462, 1418, 466, 478, 490, 1390,
  470, 470, 486, 1414, 466, 1418, 442, 1418,
  462, 1422, 462, 482, 458, 482, 462, 1418,
  466, 1418, 494, 462, 470, 474, 438, 482,
  462, 482, 482, 1418, 442, 482, 458, 482,
  462, 482, 462, 478, 462, 1418, 462, 478,
  462, 478, 466, 474, 466, 478, 462, 1418,
  466, 1418, 466, 1414, 470, 470, 474, 486,
  466, 474, 470, 1398, 502, 1378, 474, 482,
  470, 474, 466, 474, 470, 1414, 442, 482,
  458, 482, 458, 1426, 458, 1422, 462, 1418,
  466, 478, 462, 478, 466, 474, 466, 478,
  470, 486, 466, 474, 446, 498, 442, 498,
  442, 502, 438, 502, 442, 498, 442, 498,
  442, 1442, 438, 502, 414, 526, 418, 526,
  414, 506, 434, 510, 434, 506, 466, 486,
  470, 470, 470, 474, 466, 474, 466, 474,
  470, 1402, 474, 462, 470, 490, 442, 1422,
  434, 510, 434, 506, 434, 506, 434, 506,
  438, 506, 434, 506, 438, 502, 458, 1442,
  438, 502, 438, 1446, 438, 1446, 414, 1470,
  438, 1442, 438, 1442, 442, 494, 438, 502,
  438, 506, 434, 506, 434, 1450, 430, 510,
  434, 1474, 406, 1000
};

const uint16_t PROGMEM rawData18[RAW_DATA_LEN] = {
  3798, 1882, 486, 474, 470, 1414, 466, 474,
  442, 1442, 442, 482, 462, 1422, 458, 482,
  462, 1422, 458, 482, 462, 1422, 462, 474,
  466, 1418, 466, 1418, 466, 474, 494, 1390,
  502, 438, 470, 1414, 466, 1418, 470, 1414,
  470, 1426, 466, 478, 442, 498, 442, 1446,
  442, 1418, 462, 498, 442, 502, 438, 502,
  438, 502, 466, 1414, 438, 506, 414, 530,
  414, 506, 454, 1426, 438, 1446, 434, 506,
  438, 506, 434, 506, 434, 506, 438, 1442,
  438, 1446, 438, 1446, 438, 502, 438, 502,
  442, 502, 438, 1446, 434, 1446, 466, 490,
  470, 470, 466, 474, 470, 1426, 446, 490,
  446, 490, 466, 1418, 438, 1446, 438, 1446,
  438, 502, 438, 506, 438, 502, 434, 510,
  434, 506, 434, 506, 434, 510, 430, 510,
  430, 538, 406, 514, 426, 530, 430, 510,
  434, 1450, 430, 510, 418, 522, 406, 538,
  406, 534, 406, 534, 410, 534, 406, 534,
  406, 534, 406, 538, 406, 534, 406, 534,
  410, 1474, 410, 526, 434, 506, 430, 1494,
  382, 526, 406, 526, 430, 514, 426, 514,
  406, 538, 406, 534, 406, 534, 430, 1474,
  382, 538, 406, 1502, 382, 1502, 378, 1502,
  382, 1502, 382, 1502, 378, 562, 358, 582,
  358, 590, 370, 1510, 358, 1518, 382, 562,
  378, 1506, 378, 1000
};

const uint16_t PROGMEM rawData19[RAW_DATA_LEN] = {
  3790, 1902, 470, 454, 506, 1378, 466, 478,
  462, 1418, 466, 478, 462, 1418, 466, 478,
  466, 1418, 466, 474, 470, 1414, 470, 490,
  466, 1398, 502, 1382, 470, 486, 470, 1398,
  470, 470, 482, 1418, 466, 1418, 442, 1438,
  442, 1422, 462, 482, 458, 482, 462, 1422,
  462, 1422, 462, 478, 466, 474, 466, 474,
  470, 470, 466, 1418, 494, 462, 470, 474,
  470, 470, 466, 474, 466, 478, 470, 1410,
  470, 474, 442, 482, 458, 482, 462, 1438,
  446, 1422, 458, 1422, 462, 478, 462, 478,
  462, 482, 462, 1418, 466, 1418, 466, 474,
  470, 470, 470, 474, 466, 1418, 494, 462,
  466, 474, 470, 1410, 470, 1398, 478, 1406,
  470, 486, 470, 474, 442, 502, 438, 502,
  438, 502, 442, 502, 442, 498, 442, 502,
  414, 526, 418, 526, 414, 526, 414, 526,
  414, 1446, 438, 506, 438, 502, 438, 502,
  470, 486, 470, 470, 470, 474, 438, 486,
  458, 482, 434, 510, 434, 506, 434, 510,
  434, 1450, 434, 506, 438, 502, 438, 1446,
  434, 506, 438, 502, 438, 506, 462, 490,
  466, 478, 466, 478, 466, 474, 466, 1426,
  446, 490, 442, 1442, 442, 1434, 466, 1422,
  438, 1442, 458, 1426, 434, 510, 434, 506,
  434, 510, 430, 510, 434, 530, 410, 1474,
  410, 1474, 410, 1000
};

const uint16_t PROGMEM rawData20[RAW_DATA_LEN] = {
  3790, 1886, 486, 474, 470, 1410, 470, 474,
  466, 1398, 458, 482, 462, 1418, 462, 482,
  462, 1422, 458, 482, 462, 1422, 462, 474,
  466, 1418, 466, 1418, 466, 474, 494, 1390,
  502, 438, 466, 1418, 462, 1422, 462, 1418,
  466, 1418, 462, 478, 466, 478, 466, 1414,
  466, 1418, 498, 442, 462, 498, 442, 482,
  458, 482, 458, 1446, 438, 482, 462, 482,
  462, 478, 462, 1422, 462, 474, 466, 1418,
  462, 482, 462, 478, 466, 474, 466, 1422,
  462, 1418, 466, 1414, 494, 462, 466, 474,
  446, 498, 470, 1410, 470, 1414, 442, 506,
  438, 498, 438, 506, 438, 1442, 418, 506,
  434, 506, 438, 1446, 434, 1450, 434, 1446,
  434, 506, 438, 506, 462, 490, 470, 470,
  446, 498, 442, 502, 438, 486, 458, 482,
  438, 506, 434, 510, 434, 506, 434, 510,
  434, 1466, 442, 494, 466, 474, 466, 478,
  442, 502, 438, 502, 442, 502, 438, 506,
  434, 506, 438, 506, 434, 506, 438, 506,
  434, 1450, 434, 526, 430, 510, 434, 1466,
  406, 526, 406, 530, 430, 510, 430, 510,
  410, 534, 406, 538, 430, 510, 430, 1450,
  414, 530, 430, 1454, 406, 1478, 406, 1474,
  406, 1478, 406, 1478, 406, 534, 406, 534,
  406, 538, 406, 1478, 406, 550, 406, 1494,
  382, 1470, 406, 1000
};

const uint16_t PROGMEM rawData21[RAW_DATA_LEN] = {
  3794, 1906, 470, 454, 478, 1402, 466, 478,
  462, 1418, 466, 478, 462, 1422, 466, 470,
  466, 1422, 494, 462, 470, 1398, 502, 438,
  466, 1418, 494, 1406, 470, 470, 470, 1398,
  494, 462, 470, 1414, 466, 1414, 470, 1414,
  470, 1414, 442, 482, 462, 478, 490, 1410,
  470, 1418, 442, 482, 458, 478, 462, 482,
  462, 478, 466, 1418, 466, 474, 466, 478,
  466, 474, 466, 474, 470, 1418, 466, 1414,
  466, 474, 486, 474, 466, 474, 470, 1414,
  470, 1414, 446, 1434, 446, 498, 442, 498,
  442, 502, 438, 1426, 458, 1426, 434, 526,
  418, 522, 414, 506, 438, 1446, 438, 502,
  442, 498, 442, 1442, 442, 1442, 466, 1426,
  466, 478, 442, 498, 466, 474, 442, 502,
  442, 498, 442, 502, 438, 502, 438, 502,
  442, 502, 438, 502, 442, 482, 458, 506,
  438, 1442, 414, 526, 438, 502, 442, 502,
  438, 494, 466, 478, 462, 478, 462, 482,
  458, 482, 458, 482, 458, 486, 434, 506,
  434, 1474, 406, 538, 406, 530, 410, 1474,
  406, 534, 406, 534, 410, 534, 406, 534,
  410, 534, 406, 534, 406, 534, 406, 1474,
  410, 530, 410, 1474, 406, 1478, 406, 1478,
  406, 1474, 406, 1478, 406, 526, 430, 510,
  406, 538, 406, 534, 410, 1474, 406, 1474,
  406, 1502, 378, 1000
};

const uint16_t PROGMEM rawData22[RAW_DATA_LEN] = {
  3794, 1902, 470, 474, 466, 1414, 442, 482,
  490, 1394, 506, 434, 470, 1430, 442, 502,
  442, 1422, 458, 478, 462, 1422, 462, 478,
  462, 1422, 462, 1418, 462, 478, 490, 1394,
  474, 466, 462, 1422, 462, 1422, 462, 1418,
  466, 1418, 466, 470, 470, 490, 470, 1398,
  502, 1382, 494, 462, 442, 482, 458, 482,
  458, 482, 462, 1422, 462, 478, 462, 482,
  462, 474, 466, 1422, 458, 1422, 462, 1418,
  466, 478, 494, 462, 470, 470, 470, 1414,
  466, 1418, 466, 1414, 442, 482, 462, 482,
  458, 482, 462, 1418, 462, 1422, 458, 482,
  462, 478, 462, 478, 462, 1422, 462, 478,
  462, 478, 462, 1422, 462, 1418, 466, 1418,
  466, 474, 470, 498, 442, 498, 442, 502,
  438, 502, 418, 522, 470, 462, 442, 502,
  462, 478, 438, 502, 438, 506, 414, 526,
  438, 1430, 430, 510, 434, 506, 434, 506,
  438, 502, 438, 506, 438, 506, 462, 490,
  470, 470, 470, 474, 466, 474, 466, 474,
  470, 1414, 442, 502, 466, 478, 438, 1442,
  442, 502, 438, 506, 438, 502, 438, 502,
  442, 502, 438, 502, 438, 502, 438, 1446,
  438, 502, 438, 1446, 438, 1446, 434, 1450,
  434, 1446, 438, 1466, 410, 510, 430, 534,
  406, 534, 410, 1474, 406, 1478, 406, 1478,
  406, 1474, 406, 1000
};

const uint16_t PROGMEM rawData23[RAW_DATA_LEN] = {
  3794, 1902, 470, 474, 470, 1362, 518, 474,
  442, 1422, 462, 478, 462, 1422, 462, 482,
  458, 1422, 462, 478, 466, 1418, 466, 474,
  466, 1418, 462, 1422, 462, 478, 494, 1386,
  502, 438, 466, 1418, 466, 1418, 466, 1414,
  470, 1430, 470, 470, 442, 502, 442, 1418,
  462, 1426, 458, 482, 462, 478, 462, 478,
  462, 478, 466, 1418, 462, 478, 462, 478,
  462, 478, 466, 474, 466, 478, 462, 478,
  466, 1414, 466, 478, 466, 474, 466, 1418,
  466, 1418, 466, 1414, 470, 470, 474, 486,
  466, 474, 470, 1414, 470, 1414, 442, 478,
  462, 498, 442, 498, 442, 1442, 442, 502,
  442, 498, 442, 1422, 458, 1426, 458, 1422,
  458, 502, 418, 526, 418, 526, 414, 526,
  442, 486, 470, 474, 466, 474, 466, 474,
  442, 502, 462, 478, 466, 474, 466, 474,
  466, 1418, 442, 498, 442, 502, 438, 486,
  434, 506, 434, 506, 434, 510, 434, 506,
  438, 502, 438, 502, 438, 506, 462, 490,
  470, 1418, 438, 502, 438, 502, 466, 1414,
  438, 506, 438, 502, 438, 506, 434, 506,
  438, 506, 434, 506, 434, 506, 434, 1446,
  434, 510, 430, 1474, 406, 1478, 406, 1478,
  406, 1474, 406, 1478, 406, 534, 406, 526,
  434, 510, 430, 510, 430, 510, 430, 510,
  430, 514, 430, 1000
};

const uint16_t PROGMEM rawData24[RAW_DATA_LEN] = {
  3794, 1906, 470, 474, 466, 1414, 442, 482,
  486, 1398, 502, 438, 470, 1430, 466, 474,
  462, 1422, 442, 482, 458, 1426, 458, 478,
  466, 1418, 462, 1418, 466, 478, 490, 1394,
  494, 462, 470, 1410, 470, 1414, 470, 1410,
  470, 1414, 466, 474, 442, 482, 462, 1422,
  458, 1422, 466, 474, 470, 474, 494, 462,
  442, 502, 470, 1406, 470, 474, 466, 474,
  450, 494, 442, 1438, 442, 502, 438, 502,
  442, 1438, 442, 498, 446, 498, 438, 1426,
  434, 1446, 462, 1418, 458, 502, 418, 526,
  414, 506, 434, 1446, 438, 1446, 438, 506,
  438, 498, 442, 506, 466, 1410, 438, 502,
  442, 498, 442, 1442, 466, 1430, 466, 1414,
  466, 478, 442, 502, 414, 506, 434, 510,
  434, 506, 434, 506, 438, 506, 434, 526,
  438, 502, 442, 502, 442, 490, 466, 478,
  438, 1442, 438, 506, 438, 502, 438, 506,
  434, 506, 434, 510, 434, 506, 430, 510,
  430, 534, 410, 534, 406, 510, 430, 514,
  430, 1474, 406, 530, 430, 514, 426, 1466,
  406, 526, 406, 530, 430, 510, 430, 510,
  410, 534, 406, 534, 410, 530, 430, 1450,
  430, 510, 434, 1450, 406, 1478, 406, 1478,
  406, 1474, 410, 1474, 406, 538, 406, 534,
  406, 530, 430, 1474, 382, 538, 402, 562,
  382, 534, 406, 1000
};

const uint16_t PROGMEM rawData25[RAW_DATA_LEN] = {
  3790, 1906, 470, 474, 466, 1414, 442, 502,
  470, 1394, 506, 434, 470, 1434, 442, 482,
  458, 1422, 462, 482, 462, 1422, 462, 474,
  466, 1418, 466, 1418, 462, 478, 494, 1390,
  506, 434, 470, 1430, 470, 1394, 506, 1378,
  470, 1414, 470, 470, 466, 478, 466, 1414,
  466, 1418, 494, 446, 458, 482, 462, 478,
  466, 474, 466, 1418, 466, 474, 470, 474,
  466, 474, 470, 486, 474, 1394, 506, 434,
  470, 1430, 442, 482, 462, 482, 458, 1422,
  462, 1422, 462, 1418, 466, 474, 466, 474,
  474, 486, 470, 1398, 478, 1402, 498, 462,
  442, 482, 458, 482, 462, 1442, 438, 482,
  462, 478, 462, 1422, 462, 1418, 466, 1418,
  466, 478, 466, 498, 442, 498, 442, 502,
  442, 498, 470, 462, 442, 498, 442, 502,
  438, 502, 438, 506, 414, 510, 434, 506,
  438, 1442, 438, 502, 442, 498, 442, 502,
  466, 486, 474, 470, 470, 470, 470, 470,
  470, 470, 470, 474, 466, 478, 438, 502,
  442, 1442, 418, 506, 434, 506, 458, 1442,
  438, 506, 438, 502, 438, 506, 414, 526,
  438, 502, 442, 502, 438, 502, 438, 1442,
  438, 506, 434, 1446, 438, 1446, 438, 1446,
  438, 1442, 438, 1446, 434, 526, 410, 534,
  406, 534, 406, 534, 410, 1474, 406, 534,
  410, 534, 406, 1000
};

const uint16_t PROGMEM rawData26[RAW_DATA_LEN] = {
  3794, 1886, 486, 474, 470, 1414, 466, 474,
  442, 1422, 462, 482, 458, 1422, 462, 482,
  462, 1418, 462, 478, 466, 1418, 466, 474,
  466, 1418, 462, 1422, 462, 474, 498, 1386,
  502, 438, 466, 1414, 470, 1418, 466, 1414,
  470, 1426, 470, 474, 466, 474, 442, 1422,
  462, 1422, 458, 482, 462, 478, 462, 478,
  466, 474, 466, 1418, 466, 474, 466, 478,
  466, 474, 462, 1418, 470, 1410, 470, 490,
  466, 1418, 438, 482, 458, 482, 486, 1414,
  442, 1426, 458, 1418, 462, 482, 458, 482,
  462, 478, 462, 1418, 462, 1422, 462, 478,
  462, 478, 462, 478, 462, 1418, 462, 482,
  462, 478, 462, 1418, 462, 1422, 462, 1418,
  462, 482, 462, 498, 446, 486, 470, 474,
  442, 502, 442, 498, 438, 502, 438, 506,
  414, 526, 414, 530, 414, 526, 414, 506,
  438, 1442, 466, 490, 466, 474, 466, 474,
  466, 474, 466, 478, 442, 498, 418, 506,
  458, 482, 458, 482, 458, 482, 434, 506,
  462, 1442, 438, 502, 442, 498, 442, 1438,
  442, 498, 442, 502, 438, 502, 438, 506,
  438, 502, 438, 502, 438, 502, 438, 1446,
  438, 502, 438, 1446, 434, 1446, 438, 1446,
  438, 1446, 434, 1446, 434, 510, 434, 526,
  406, 534, 406, 1478, 406, 1478, 406, 534,
  406, 538, 406, 1000
};

const uint16_t PROGMEM rawData27[RAW_DATA_LEN] = {
  3790, 1906, 466, 474, 470, 1414, 466, 474,
  442, 1442, 442, 478, 462, 1422, 462, 482,
  458, 1422, 462, 478, 466, 1418, 466, 474,
  466, 1418, 462, 1422, 466, 474, 494, 1390,
  502, 438, 466, 1418, 466, 1414, 470, 1414,
  470, 1426, 474, 470, 466, 478, 442, 1442,
  442, 1438, 446, 478, 462, 478, 462, 482,
  462, 478, 462, 1422, 466, 498, 442, 498,
  446, 498, 438, 502, 442, 498, 418, 1442,
  442, 1442, 442, 526, 414, 502, 434, 1450,
  434, 1446, 438, 1442, 442, 498, 466, 490,
  466, 474, 470, 1398, 478, 1406, 466, 490,
  442, 498, 442, 498, 442, 1442, 438, 486,
  434, 506, 462, 1442, 438, 1446, 438, 1442,
  438, 486, 458, 502, 418, 522, 442, 502,
  442, 494, 462, 482, 438, 502, 438, 506,
  434, 506, 438, 506, 434, 506, 434, 510,
  434, 1450, 434, 506, 434, 510, 430, 526,
  434, 510, 430, 514, 430, 510, 406, 534,
  410, 534, 406, 534, 406, 538, 406, 534,
  406, 1478, 406, 538, 406, 534, 406, 1474,
  406, 534, 406, 538, 406, 530, 430, 510,
  430, 510, 434, 510, 430, 510, 430, 1494,
  378, 530, 406, 1470, 430, 1454, 430, 1454,
  410, 1474, 402, 1506, 378, 538, 406, 534,
  410, 534, 406, 534, 406, 538, 402, 1502,
  382, 562, 382, 1000
};

const uint16_t PROGMEM rawData28[RAW_DATA_LEN] = {
  3798, 1906, 466, 474, 470, 1394, 506, 434,
  466, 1422, 494, 462, 470, 1414, 470, 470,
  470, 1398, 506, 434, 466, 1418, 466, 474,
  466, 1418, 466, 1418, 466, 474, 470, 1418,
  494, 462, 466, 1418, 466, 1418, 442, 1442,
  442, 1422, 462, 478, 462, 478, 466, 1418,
  462, 1426, 462, 474, 466, 478, 466, 470,
  470, 474, 466, 1418, 494, 462, 470, 474,
  466, 474, 470, 1398, 502, 434, 474, 1426,
  474, 1414, 438, 482, 462, 482, 462, 1418,
  462, 1422, 462, 1418, 466, 474, 466, 478,
  466, 478, 462, 1418, 466, 1418, 470, 482,
  446, 498, 442, 498, 442, 1446, 414, 526,
  418, 522, 414, 1450, 434, 1446, 442, 1438,
  442, 502, 442, 498, 442, 498, 442, 502,
  442, 498, 438, 502, 442, 498, 466, 490,
  470, 474, 466, 474, 466, 478, 438, 502,
  466, 1414, 442, 502, 442, 502, 438, 486,
  458, 498, 442, 502, 414, 526, 442, 502,
  438, 502, 438, 506, 438, 502, 438, 502,
  438, 1446, 438, 506, 434, 502, 438, 1446,
  434, 506, 438, 506, 434, 506, 434, 510,
  430, 514, 430, 526, 410, 534, 406, 1478,
  406, 534, 406, 1478, 406, 1478, 406, 1478,
  406, 1478, 406, 1470, 430, 510, 430, 510,
  430, 510, 434, 1450, 406, 538, 406, 1478,
  406, 534, 406, 1000
};

const uint16_t PROGMEM rawData29[RAW_DATA_LEN] = {
  3790, 1906, 466, 474, 466, 1414, 470, 474,
  442, 1438, 442, 482, 462, 1422, 458, 482,
  462, 1422, 462, 478, 462, 1418, 466, 478,
  466, 1414, 466, 1418, 466, 474, 498, 1386,
  502, 438, 470, 1414, 470, 1414, 466, 1414,
  490, 1410, 470, 474, 442, 498, 442, 1422,
  462, 1442, 442, 478, 466, 474, 466, 478,
  462, 478, 466, 1418, 466, 474, 466, 474,
  466, 474, 470, 470, 470, 1418, 462, 1418,
  470, 1426, 470, 470, 470, 474, 470, 1410,
  470, 1414, 470, 1410, 470, 474, 466, 474,
  442, 502, 466, 1414, 466, 1414, 466, 478,
  442, 498, 442, 498, 442, 1442, 442, 498,
  442, 502, 438, 1442, 462, 1422, 438, 1422,
  458, 506, 434, 506, 418, 502, 438, 506,
  466, 486, 470, 474, 462, 478, 442, 498,
  442, 502, 438, 486, 454, 486, 458, 486,
  434, 1446, 434, 506, 438, 502, 438, 502,
  438, 506, 438, 502, 438, 506, 462, 490,
  466, 474, 466, 478, 462, 478, 438, 502,
  466, 1418, 462, 482, 462, 474, 466, 1434,
  438, 494, 438, 498, 458, 482, 434, 510,
  430, 534, 406, 534, 410, 530, 434, 1446,
  410, 534, 430, 1450, 410, 1474, 406, 1478,
  406, 1478, 406, 1474, 410, 530, 410, 534,
  406, 534, 406, 534, 410, 1474, 406, 1474,
  406, 538, 406, 1000
};

const uint16_t PROGMEM rawData30[RAW_DATA_LEN] = {
  3794, 1902, 470, 470, 470, 1414, 466, 474,
  442, 1442, 442, 482, 458, 1426, 458, 482,
  458, 1422, 462, 478, 466, 1418, 466, 474,
  466, 1414, 466, 1418, 466, 474, 494, 1390,
  502, 438, 470, 1414, 470, 1414, 466, 1414,
  494, 1402, 470, 474, 442, 482, 458, 1442,
  442, 1422, 462, 478, 462, 478, 462, 478,
  466, 478, 462, 1422, 462, 478, 462, 478,
  466, 474, 466, 1418, 466, 1414, 466, 1418,
  470, 1410, 470, 474, 466, 470, 470, 1414,
  494, 1406, 470, 1394, 502, 438, 470, 490,
  470, 470, 470, 1410, 474, 1394, 506, 434,
  498, 462, 470, 474, 466, 1414, 442, 482,
  462, 478, 466, 1418, 466, 1418, 466, 1414,
  470, 474, 466, 474, 470, 474, 466, 474,
  466, 474, 474, 486, 466, 474, 466, 474,
  470, 474, 442, 498, 442, 498, 442, 502,
  442, 1442, 438, 502, 442, 502, 418, 526,
  414, 526, 418, 526, 442, 486, 470, 470,
  470, 474, 462, 478, 442, 502, 438, 502,
  466, 1418, 438, 502, 438, 506, 438, 1426,
  434, 506, 434, 506, 434, 506, 438, 502,
  438, 502, 438, 506, 438, 502, 438, 1446,
  462, 494, 466, 1414, 466, 1418, 442, 1442,
  438, 1446, 438, 1442, 438, 502, 438, 506,
  438, 502, 438, 1442, 438, 1446, 438, 1446,
  434, 510, 434, 1000
};


//*****Temp*********

void setup()
{
  Serial.begin(115200);
  pinMode(esp_status_pin, OUTPUT);                        //set pin to input
  digitalWrite(esp_status_pin, HIGH);
  mySender.begin();
  Serial.setTimeout(500);// Set time out for
  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
  reconnect();
}

void setup_wifi() {
  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  randomSeed(micros());
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP32Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str(), MQTT_USER, MQTT_PASSWORD)) {
      Serial.println("connected");
      //Once connected, publish an announcement...
      client.publish("/icircuit/presence/ESP32/", "hello world");
      // ... and resubscribe
      client.subscribe(MQTT_SERIAL_RECEIVER_CH);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void callback(char* topic, byte *payload, unsigned int length) {
  Serial.println("-------new message from broker-----");
  Serial.print("channel:");
  Serial.println(topic);
  Serial.print("data:");
  Serial.write(payload, length);
  Serial.println();
  DeserializationError error = deserializeJson(doc, payload);
  if (error)
    return;
  activate = doc["activate"];
  if (doc["temperature"]) {
    input_temperature = doc["temperature"];
  }
  bool action_by_user = doc["action_by_user"];
  if (!turn_on_status) {
    if (action_by_user && activate) {
      control_ac();
      turn_on_status = true;
      used_by_user = true;
    } else if (!used_by_user && activate) {
      control_ac();
      turn_on_status = true;
    }
  } else {
    if (activate) {
      change_temperature();
    }
    if ((action_by_user && !activate) || (!used_by_user && !activate)) {
      control_ac();
      turn_on_status = false;
      used_by_user = false;
    }
  }
}

void send_signal(const uint16_t *signal) {
  static uint16_t signal_buffer[RAW_DATA_LEN];
  memcpy_P(signal_buffer, signal, RAW_DATA_LEN * sizeof * signal);
  mySender.sendRaw(signal_buffer, RAW_DATA_LEN, 36);
}

void publishSerialData(String serialData) {
  if (!client.connected()) {
    reconnect();
  }
  int str_len = serialData.length() + 1;

  char char_array[str_len];

  serialData.toCharArray(char_array, str_len);
  client.publish(MQTT_SERIAL_PUBLISH_CH, char_array);
}

void change_temperature() {
  if (input_temperature == 16) {
    Serial.println(input_temperature);
    send_signal(rawData16);
    delay(500);
  } else if (input_temperature == 17) {
    Serial.println(input_temperature);
    send_signal(rawData17);
    delay(500);
  } else if (input_temperature == 18) {
    Serial.println(input_temperature);
    send_signal(rawData18);
    delay(500);
  } else if (input_temperature == 19) {
    Serial.println(input_temperature);
    send_signal(rawData19);
    delay(500);
  } else if (input_temperature == 20) {
    Serial.println(input_temperature);
    send_signal(rawData20);
    delay(500);
  } else if (input_temperature == 21) {
    Serial.println(input_temperature);
    send_signal(rawData21);
    delay(500);
  } else if (input_temperature == 22) {
    Serial.println(input_temperature);
    send_signal(rawData22);
    delay(500);
  } else if (input_temperature == 23) {
    Serial.println(input_temperature);
    send_signal(rawData23);
    delay(500);
  } else if (input_temperature == 24) {
    Serial.println(input_temperature);
    send_signal(rawData24);
    delay(500);
  } else if (input_temperature == 25) {
    Serial.println(input_temperature);
    send_signal(rawData25);
    delay(500);
  } else if (input_temperature == 26) {
    Serial.println(input_temperature);
    send_signal(rawData26);
    delay(500);
  } else if (input_temperature == 27) {
    Serial.println(input_temperature);
    send_signal(rawData27);
    delay(500);
  } else if (input_temperature == 28) {
    Serial.println(input_temperature);
    send_signal(rawData28);
    delay(500);
  } else if (input_temperature == 29) {
    Serial.println(input_temperature);
    send_signal(rawData29);
    delay(500);
  } else if (input_temperature == 30) {
    Serial.println(input_temperature);
    send_signal(rawData30);
    delay(500);
  }

  String response;
  response += F("{\"action\": \"update/ac_status\"");
  response += F(",\"espId\":");
  response += String(MQTT_SERIAL_RECEIVER_CH);
  response += F(",\"temperature\":");
  response += String(input_temperature);
  response += F(",\"ac_status\":");
  response += String(activate);
  response += F("}");

  publishSerialData(response);
}

void control_ac() {
  if (activate) {
    send_signal(rawDataON);
    delay(500);
    if (input_temperature == 16) {
      Serial.println(input_temperature);
      send_signal(rawData16);
      delay(500);
    } else if (input_temperature == 17) {
      Serial.println(input_temperature);
      send_signal(rawData17);
      delay(500);
    } else if (input_temperature == 18) {
      Serial.println(input_temperature);
      send_signal(rawData18);
      delay(500);
    } else if (input_temperature == 19) {
      Serial.println(input_temperature);
      send_signal(rawData19);
      delay(500);
    } else if (input_temperature == 20) {
      Serial.println(input_temperature);
      send_signal(rawData20);
      delay(500);
    } else if (input_temperature == 21) {
      Serial.println(input_temperature);
      send_signal(rawData21);
      delay(500);
    } else if (input_temperature == 22) {
      Serial.println(input_temperature);
      send_signal(rawData22);
      delay(500);
    } else if (input_temperature == 23) {
      Serial.println(input_temperature);
      send_signal(rawData23);
      delay(500);
    } else if (input_temperature == 24) {
      Serial.println(input_temperature);
      send_signal(rawData24);
      delay(500);
    } else if (input_temperature == 25) {
      Serial.println(input_temperature);
      send_signal(rawData25);
      delay(500);
    } else if (input_temperature == 26) {
      Serial.println(input_temperature);
      send_signal(rawData26);
      delay(500);
    } else if (input_temperature == 27) {
      Serial.println(input_temperature);
      send_signal(rawData27);
      delay(500);
    } else if (input_temperature == 28) {
      Serial.println(input_temperature);
      send_signal(rawData28);
      delay(500);
    } else if (input_temperature == 29) {
      Serial.println(input_temperature);
      send_signal(rawData29);
      delay(500);
    } else if (input_temperature == 30) {
      Serial.println(input_temperature);
      send_signal(rawData30);
      delay(500);
    }
  } else {
    send_signal(rawDataOFF);
    delay(500);
  }

  String response;
  response += F("{\"action\": \"update/ac_status\"");
  response += F(",\"espId\":");
  response += String(MQTT_SERIAL_RECEIVER_CH);
  response += F(",\"temperature\":");
  response += String(input_temperature);
  response += F(",\"ac_status\":");
  response += String(activate);
  response += F("}");

  publishSerialData(response);
}

void loop() {
  client.loop();
  check_status();
}

void check_status() {
  digitalWrite(esp_status_pin, HIGH);
  delay(500);
  digitalWrite(esp_status_pin, LOW);
  delay(500);
}
